The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

This is a text file in reStructuredText format.  
First import ``matrix_divided`` from the ``2-matrix_divided`` module:

    00 2-matrix_divided exist
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test cases:

    01 Correct input
    >>> print(matrix_divided([
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ], 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    01 Correct input
    >>> print(matrix_divided([
    ...     [1, 2, 3],
    ...     [4, 5, 6, 7]
    ... ], 3))
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size


    01 Zero division
    >>> print(matrix_divided([
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ], 0))
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero



    01 Non number element
    >>> print(matrix_divided([
    ...     ['', 2, 3],
    ...     [4, 5, 6]
    ... ], 3))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    01 Non list row
    >>> print(matrix_divided([
    ...     'string',
    ...     [4, 5, 6]
    ... ], 3))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    01 Matrix not list
    >>> print(matrix_divided({
    ...     'string':
    ...     [4, 5, 6]
    ... } , 3))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    01 Zero division
    >>> print(matrix_divided([
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ], 1/float('-inf')))
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

    02 Return type
    >>> type(matrix_divided([
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ], 2))
    <class 'list'>


    02 Return type
    >>> type(matrix_divided([
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ], 2)[0])
    <class 'list'>


    Edge cases:
    -----------------------

    01 Integer divided by a string
    >>> print(matrix_divided([
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ], "string"))
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

    01 Integer divided by an inf
    >>> print(matrix_divided([
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ], float('inf')))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

    01 Missing one argument
    >>> print(matrix_divided([
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]))
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'


    01 Missing two arguments
    >>> print(matrix_divided())
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
